
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://lsrbeymronxrrgwekevc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxzcmJleW1yb254cnJnd2VrZXZjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzODk4NjAsImV4cCI6MjA1Nzk2NTg2MH0.AdQabFjdOyr81EbHRS5Rx7-ZxafaAkE3beDAWfoT_Bo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Authentication helper functions
export const getCurrentUser = async () => {
  const { data, error } = await supabase.auth.getSession();
  if (error || !data.session) return null;
  return data.session.user;
};

export const getUserDisplayName = async () => {
  const user = await getCurrentUser();
  if (!user) return null;
  
  // First check if user_metadata has a name field
  if (user.user_metadata && user.user_metadata.name) {
    return user.user_metadata.name;
  }
  
  // Fall back to email if no display name is set
  return user.email;
};

export const signIn = async (email: string, password: string) => {
  const { data, error } = await supabase.auth.signInWithPassword({
    email,
    password,
  });
  return { data, error };
};

export const signOut = async () => {
  return await supabase.auth.signOut();
};

export const isUserAdmin = async () => {
  const user = await getCurrentUser();
  if (!user) return false;
  
  // Check if user has admin role in metadata
  return user.app_metadata?.role === 'admin';
};

export const createUserByAdmin = async (email: string, password: string, role: 'admin' | 'user' = 'user', displayName?: string) => {
  const metadata = { role };
  
  // Add display name if provided
  const userMetadata = displayName ? { name: displayName } : undefined;
  
  const { data, error } = await supabase.auth.admin.createUser({
    email,
    password,
    email_confirm: true,
    app_metadata: metadata,
    user_metadata: userMetadata,
  });
  return { data, error };
};

export const updateUserDisplayName = async (displayName: string) => {
  const { data, error } = await supabase.auth.updateUser({
    data: { name: displayName }
  });
  return { data, error };
};
